# week08/.github/workflows/frontend-cd.yml
name: CD - Deploy Frontend to AKS

on:
  workflow_call:
    inputs:
      product_api_ip:
        required: true
        type: string
      order_api_ip:
        required: true
        type: string
      aks_cluster_name:
        required: true
        type: string
      aks_resource_group:
        required: true
        type: string

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify Inputs
        run: |
          if [[ -z "${{ inputs.product_api_ip }}" || -z "${{ inputs.order_api_ip }}" ]]; then
            echo "Error: Backend IPs not provided!"
            exit 1
          fi
          echo "Product API IP: ${{ inputs.product_api_ip }}"
          echo "Order API IP: ${{ inputs.order_api_ip }}"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: false

      - name: Verify ACR Secret
        run: |
          if [[ -z "${{ secrets.AZURE_CONTAINER_REGISTRY }}" ]]; then
            echo "Error: ACR secret is missing!"
            exit 1
          fi
          echo "Using ACR: ${{ secrets.AZURE_CONTAINER_REGISTRY }}"

      - name: Login to ACR
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      - name: Inject Backend IPs into Frontend
        run: |
          FRONTEND_FILE=frontend/main.js
          if ! grep -q "_PRODUCT_API_URL_" $FRONTEND_FILE; then
            echo "Error: _PRODUCT_API_URL_ placeholder not found in $FRONTEND_FILE"
            exit 1
          fi
          if ! grep -q "_ORDER_API_URL_" $FRONTEND_FILE; then
            echo "Error: _ORDER_API_URL_ placeholder not found in $FRONTEND_FILE"
            exit 1
          fi
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" $FRONTEND_FILE
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" $FRONTEND_FILE
          echo "Updated frontend/main.js with backend IPs."
          cat $FRONTEND_FILE

      - name: Build & Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest ./frontend/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      - name: Deploy Frontend to AKS
        run: |
          cd k8s/
          kubectl apply -f frontend.yaml

      - name: Logout from Azure
        run: az logout
